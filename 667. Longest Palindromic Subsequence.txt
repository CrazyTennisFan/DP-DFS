Given a string s, find the longest palindromic subsequence's length in s. 
You may assume that the maximum length of s is 1000.

Example
Given s = "bbbab" return 4
One possible longest palindromic subsequence is "bbbb".

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－


public class Solution {
    /**
     * @param s: the maximum length of s is 1000
     * @return: the longest palindromic subsequence's length
     */
    public int longestPalindromeSubseq(String s) {
        // write your code here
        char[] arr = s.toCharArray();
        if (arr.length == 0)
        {
            return 0;
        }
        
        
        int n = arr.length;
        
        int[][] f = new int[n][n];
        for(int i = 0; i < n; i++)
        {
            f[i][i] = 1;
        }
        
        for(int i = 0; i < n-1; i++)
        {
            if(arr[i] == arr[i+1])
            {
                f[i][i+1] = 2;
            }
            else
            {
                f[i][i+1] = 1;
            }
        }
        
        
        for(int len = 3; len <= n; len++)
        {
            for(int i = 0; i <= n - len; i++)
            {
                int j = i+ len - 1;
                f[i][j] = Math.max(f[i+1][j], f[i][j-1]);
                if (arr[i] == arr[j])
                {
                    f[i][j] = Math.max(f[i][j], f[i+1][j-1] + 2);
                }
            }
        }
        
        return f[0][n-1];
        
    }
}