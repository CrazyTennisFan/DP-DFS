A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message containing digits, determine the total number of ways to decode it.


Example
Given encoded message 12, it could be decoded as AB (1 2) or L (12).
The number of ways decoding 12 is 2.


-------------------------------------------------------------------------------------------------


public class Solution {
    /**
     * @param s: a string,  encoded message
     * @return: an integer, the number of ways decoding
     */
    public int numDecodings(String s) {
        // write your code here
        if (s == null || s.length() == 0)
        {
            return 0;
        }
        
        char[] arr = s.toCharArray();
        int[] f = new int[arr.length+1];
        int i, j;
        
        f[0] = 1;   //初始化
        
        
        for(i=1; i <= arr.length; i++)
        {
            f[i] = 0;
            //consider the last digit
            j = arr[i-1] - '0';
            if(j >= 1 && j <= 9)
            {
                f[i] += f[i-1];
            }
            
            //consider the last 2 digit
            if(i > 1)
            {
                j = (arr[i-2] - '0')*10 + arr[i-1] - '0';
                if(j >= 10 && j <= 26)
                {
                    f[i] += f[i-2];
                }
            }
        }
        
        return f[arr.length];
    }
}